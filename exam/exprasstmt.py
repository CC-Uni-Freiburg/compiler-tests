# Author: Alexander Pfefferle
# in=
# golden=
(1, 2, 3)[2]
[1, 2, 3][2]
len((1, 2, 3))
len([1, 2, 3])
(1, 2, 3)
[1, 2, 3]
0
a = (1, 2, 3)
b = (1, 2, 3)
a
b
-1
7 + 7


def n() -> int:
    n
    (1, 2, 3)[2]
    [1, 2, 3][2]
    len((1, 2, 3))
    len([1, 2, 3])
    (1, 2, 3)
    [1, 2, 3]
    0
    c = (1, 2, 3)
    d = (1, 2, 3)
    c
    d
    -1
    7 + 7
    return 0


n
i = 1
while i > 0:
    i = i - 1
    n
    (1, 2, 3)[2]
    [1, 2, 3][2]
    len((1, 2, 3))
    len([1, 2, 3])
    (1, 2, 3)
    [1, 2, 3]
    0
    c = (1, 2, 3)
    d = (1, 2, 3)
    c
    d
    -1
    7 + 7
#  # Author: Alexander Pfefferle
#  # in=
#  # golden=
#  (1, 2, 3)[2]
#  [1, 2, 3][2]
#  len((1, 2, 3))
#  len([1, 2, 3])
#  (1, 2, 3)
#  [1, 2, 3]
#  0
#  a = (1, 2, 3)
#  b = [1, 2, 3]
#  a
#  b
#  -1
#  7 + 7
#
#
#  def n() -> int:
#      n
#      (1, 2, 3)[2]
#      [1, 2, 3][2]
#      len((1, 2, 3))
#      len([1, 2, 3])
#      (1, 2, 3)
#      [1, 2, 3]
#      0
#      c = (1, 2, 3)
#      d = [1, 2, 3]
#      c
#      d
#      -1
#      7 + 7
#      return 0
#
#
#  n
#  i = 1
#  while i > 0:
#      i = i - 1
#      n
#      (1, 2, 3)[2]
#      [1, 2, 3][2]
#      len((1, 2, 3))
#      len([1, 2, 3])
#      (1, 2, 3)
#      [1, 2, 3]
#      0
#      c = (1, 2, 3)
#      d = [1, 2, 3]
#      c
#      d
#      -1
#      7 + 7
